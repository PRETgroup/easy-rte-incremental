function px_py_pz_pr_px2;
interface of px_py_pz_pr_px2 {
	in uint8_t x, y, z, x2;
	in uint16_t rpm;
	out bool x_accel, x_hold, y_accel, y_hold, z_accel, z_hold, rpm_up, rpm_hold, x2_accel, x2_hold; //out here means that they're going from CONTROLLER to PLANT
}

policy px_py_pz_pr_px2 of px_py_pz_pr_px2 {
	internals {
		constant uint8_t max_x := 10; 
		constant uint8_t max_y := 10; 
		constant uint8_t max_z := 10; 
		constant uint16_t max_rpm := 1250; 
		constant uint8_t max_x2 := 10; 
	}

	states {
        
		l0l2l4l6l8 {												
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l8 on (x2 < max_x2 || (!x2_accel && x2 >= max_x2));
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}


		l1l2l4l6l8 {		// hold x										
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}
		l1l2l4l6l9 {		// hold x & x2										
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}

		l0l3l4l6l8 {		// hold y									
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}
		l0l3l4l6l9 {		// hold y & x2
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}

		l0l2l5l6l8 {		// hold z									
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}
		l0l2l5l6l9 {		// hold z & x2
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}

		l0l2l4l7l8 {		// hold rpm									
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}
		l0l2l4l7l9 {		// hold rpm & x2
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}

		l0l2l4l6l9 {		// hold x2									
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}

		l1l3l4l6l8 {		// hold x & y	
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}
		l1l3l4l6l9 {		// hold x & y & x2
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}

		l1l3l4l7l8 {		// hold x & y & rpm
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}
		l1l3l4l7l9 {		// hold x & y & rpm & x2
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}

		l1l2l5l6l8 {		// hold x & z									
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}
		l1l2l5l6l9 {		// hold x & z & x2									
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}

		l1l2l5l7l8 {		// hold x & z & rpm									
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}
		l1l2l5l7l9 {		// hold x & z & rpm & x2									
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}

		l0l3l5l6l8 {		// hold y & z									
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}
		l0l3l5l6l9 {		// hold y & z & x2
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}

		l0l3l5l7l8 {		// hold y & z & rpm								
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}
		l0l3l5l7l9 {		// hold y & z & rpm & x2
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}

		l1l2l4l7l8 {		// hold x and rpm	
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}
		l1l2l4l7l9 {		// hold x and rpm & x2	
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}

		l0l3l4l7l8 {		// hold y and rpm
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}
		l0l3l4l7l9 {		// hold y and rpm & x2
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}

		l0l2l5l7l8 {		// hold z and rpm
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}
		l0l2l5l7l9 {		// hold z and rpm and x2
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}

		l1l3l5l6l8 {		// hold x & y & z								
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}
		l1l3l5l6l9 {		// hold x & y & z & x2
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}

		l1l3l5l7l8 {		// hold x & y & z & rpm								
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}
		l1l3l5l7l9 {		// hold x & y & z & rpm & x2
			-> l1l2l4l6l8 on (!x_accel && x_hold && x <= max_x);
			-> l1l2l4l6l9 on (!x_accel && x_hold && x <= max_x && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l6l8 on (!y_accel && y_hold && y <= max_y);
			-> l0l3l4l6l9 on (!y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l6l8 on (!z_accel && z_hold && z <= max_z);
			-> l0l2l5l6l9 on (!z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l7l8 on (!rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l4l7l9 on (!rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l4l6l9 on (!x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l6l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z);
			-> l1l2l5l6l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l5l7l8 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l5l7l9 on (!x_accel && x_hold && x <= max_x && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l6l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l0l3l5l6l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l5l7l8 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l5l7l9 on (!y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l2l4l7l8 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l2l4l7l9 on (!x_accel && x_hold && x <= max_x && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l3l4l7l8 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l3l4l7l9 on (!y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l0l2l5l7l8 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l0l2l5l7l9 on (!z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z);
			-> l1l3l5l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l6l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y);
			-> l1l3l4l6l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l4l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l4l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> l1l3l5l7l8 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm);
			-> l1l3l5l7l9 on (!x_accel && x_hold && x <= max_x && !y_accel && y_hold && y <= max_y && !z_accel && z_hold && z <= max_z && !rpm_up && rpm_hold && rpm <= max_rpm && !x2_accel && x2_hold && x2 <= max_x2);
			-> violation on (x_accel && x >= max_x) recover x_accel:= 0;
			-> violation on (y_accel && y >= max_x) recover y_accel:= 0;
			-> violation on (z_accel && z >= max_z) recover z_accel:= 0;
			-> violation on (rpm_up && rpm >= max_rpm) recover rpm_up:= 0;
			-> violation on (x2_accel && x2 >= max_x2) recover x2_accel:= 0;
		}


	}
}